version: '3'
services:

  db:
    build:
      context: .
      dockerfile: postgres/Dockerfile.postgres
    container_name: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always
    env_file:
      - postgres/.env.postgres

  app:
    build:
      context: .
      dockerfile: django_app/Dockerfile.django_app
    container_name: app
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:8000/api/v1/smoketest/ || exit 1"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always
    volumes:
      - static-volume:/opt/django_app/static
    depends_on:
      db:
        condition: service_healthy

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile.nginx
    container_name: nginx
    healthcheck:
      # Проверка связности nginx c app через volume
      test: [ "CMD-SHELL", "curl -f http://127.0.0.1/static/smoketest.html || exit 1" ]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: always
    volumes:
      - ./nginx/files/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/files/configs:/etc/nginx/conf.d:ro
      - static-volume:/public/static/:ro
    ports:
      - '80:80'
    depends_on:
      app:
        condition: service_healthy

  elastic:
    build:
      context: .
      dockerfile: elastic/Dockerfile.elastic
    container_name: elastic
    restart: always
    env_file:
      - elastic/.env.elastic

  etl_app:
    build:
      context: .
      dockerfile: etl_app/Dockerfile.etl_app
    container_name: etl_app
    restart: always

volumes:
  static-volume:
